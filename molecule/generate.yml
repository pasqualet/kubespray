---

- name: Generate scenarios
  hosts: localhost
  vars:
    vm:
      cpu: 2
      memory: 2048
    os:
      - name: ubuntu1604
        box: generic/ubuntu1604
      - name: ubuntu1804
        box: generic/ubuntu1804
      - name: ubuntu2004
        box: generic/ubuntu2004
      - name: centos7
        box: centos/7
      - name: centos8
        box: centos/8
    runtimes:
      - docker
      - containerd
      - crio
    networking:
      - calico
      - canal
      - cilium
      - contiv
  tasks:
    - name: Create gitlabci
      copy:
        dest: .gitlab-ci.yaml
        content: |
          ---
          {% for os_item in os %}
            {% for runtime in runtimes %}
              {% for net in networking %}

          integration_tests_{{ os_item.name }}_{{ runtime }}_{{ net }}:
            script:
              - cd molecule && molecule test -s {{ os_item.name }}

              {% endfor %}
            {% endfor %}
          {% endfor %}

    - name: Create scenario directory
      with_nested:
        - "{{ os }}"
        - "{{ runtimes }}"
        - "{{ networking }}"
      file:
        path: "{{ item[0].name }}_{{ item[1] }}_{{ item[2] }}"
        state: directory

    - name: Create verify.yml
      with_nested:
        - "{{ os }}"
        - "{{ runtimes }}"
        - "{{ networking }}"
      copy:
        dest: "{{ item[0].name }}_{{ item[1] }}_{{ item[2] }}/verify.yml"
        content: |
          ---
          - import_playbook: ../common/verify.yml
            vars:
              container_manager: {{ item[1] }}
              kube_network_plugin: {{ item[2] }}

    - name: Create converge.yml
      with_nested:
        - "{{ os }}"
        - "{{ runtimes }}"
        - "{{ networking }}"
      copy:
        dest: "{{ item[0].name }}_{{ item[1] }}_{{ item[2] }}/converge.yml"
        content: |
          ---
          - import_playbook: ../../cluster.yml

    - name: Create molecule.yml
      with_nested:
        - "{{ os }}"
        - "{{ runtimes }}"
        - "{{ networking }}"
      copy:
        dest: "{{ item[0].name }}_{{ item[1] }}_{{ item[2] }}/molecule.yml"
        content: |
          ---
          driver:
            name: vagrant
            provider:
              name: libvirt
              options:
                driver: kvm
          platforms:
            - name: master-0
              box: {{ item[0].box }}
              cpus: {{ vm.cpu }}
              memory: {{ vm.memory }}
              groups:
                - kube-master
                - kube-node
                - etcd
                - k8s-cluster
            - name: master-1
              box: {{ item[0].box }}
              cpus: {{ vm.cpu }}
              memory: {{ vm.memory }}
              groups:
                - kube-master
                - kube-node
                - etcd
                - k8s-cluster
            - name: master-2
              box: {{ item[0].box }}
              cpus: {{ vm.cpu }}
              memory: {{ vm.memory }}
              groups:
                - kube-master
                - kube-node
                - etcd
                - k8s-cluster
          provisioner:
            name: ansible
            env:
              ANSIBLE_ROLES_PATH: ../../../../
            config_options:
              defaults:
                callback_whitelist: profile_tasks
            lint:
              name: ansible-lint
              options:
                c: ../../../.ansible-lint
            ansible_args:
              - --become
            inventory:
              group_vars:
                all:
                  ansible_become_password: vagrant
                  container_manager: {{ item[1] }}
                  kube_network_plugin: {{ item[2] }}
                  {% if item[1] != "docker" -%}
                  etcd_deployment_type: host
                  {% endif %}

          verifier:
            name: ansible
            lint: |
              set -e
              yamllint -c ../../../.yamllint .
          scenario:
            test_sequence:
              - dependency
              - lint
              - cleanup
              - destroy
              - syntax
              - create
              - prepare
              - converge
              - side_effect
              - verify
              - cleanup
              - destroy
